---
- name: Create Prometheus config file
  template:
    src: templates/prometheus.yml.j2
    dest: /sudo/prometheus/etc/prometheus.yml
    mode: '0644'
  tags:
    - prometheus
  notify: "Restart Prometheus"

- name: Copy SUDO Watch Prometheus Alert Rules
  copy:
    src: files/sudowatch-prometheus.alerts
    dest: /sudo/prometheus/etc/rules/sudowatch-prometheus.rules
    mode: '0644'
  tags:
    - prometheus
  notify: "Restart Prometheus"

- name: Copy SUDO Watch Blackbox Alert Rules
  copy:
    src: files/sudowatch-blackbox-exporter.alerts
    dest: /sudo/prometheus/etc/rules/sudowatch-blackbox.rules
    mode: '0644'
  tags:
    - prometheus
  notify: "Restart Prometheus"

- name: Copy SUDO Watch Docker Alert Rules
  copy:
    src: files/sudowatch-docker.alerts
    dest: /sudo/prometheus/etc/rules/sudowatch-docker.rules
    mode: '0644'
  tags:
    - prometheus
  notify: "Restart Prometheus"

- name: Generate Node Alerts
  prometheus_merge:
    rules_path: files/sudowatch-node.alerts
  register: node_alerts
  tags:
    - prometheus
- debug: var=node_alerts
- name: Create Custom Alert rules file
  copy:
    content: "{{ node_alerts }}"
    dest: /tmp/ansible.rules
    mode: '0644'
  tags:
    - prometheus
# - name: Copy SUDO Watch Node Alert Rules
#   copy:
#     src: files/sudowatch-node.alerts
#     dest: /sudo/prometheus/etc/rules/sudowatch-node.rules
#     mode: '0644'
#   tags:
#     - prometheus
#   notify: "Restart Prometheus"

- name: Create Custom Alert rules file
  template:
    src: templates/alertrules.yml.j2
    dest: /sudo/prometheus/etc/rules/ansible.rules
    mode: '0644'
  tags:
    - prometheus
  notify: "Restart Prometheus"

    #- VIRTUAL_HOST={{ prom_host }}.{{ domain }}
    #- VIRTUAL_PORT=9090
- name: Create and start SUDO Watch services
  community.docker.docker_compose_v2:
    project_name: sudowatch
    definition:
      version: '2'


      networks:
        watch-net:
          driver: bridge

      services:
        prometheus:
          image: prom/prometheus:v2.24.0
          container_name: prometheus
          volumes:
            - /sudo/prometheus/etc:/etc/prometheus
            - /sudo/prometheus/prometheus_data:/prometheus
          environment: "{{ prom_environment }}"
          command: "{{ prom_command }}"
          restart: unless-stopped
          expose:
            - 9090
          networks:
            - watch-net
          labels:
            container_group: "sudowatch"

        nodeexporter:
          image: prom/node-exporter:v1.0.1
          container_name: nodeexporter
          volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
            - /var/lib/node_exporter:/var/lib/node_exporter
          command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
            - '--collector.systemd'
            - '--collector.processes'
            - '--collector.textfile.directory=/var/lib/node_exporter'
          restart: unless-stopped
          expose:
            - 9100
          networks:
            - watch-net
          labels:
            container_group: "sudowatch"

        cadvisor:
          image: gcr.io/cadvisor/cadvisor:v0.38.6
          container_name: cadvisor
          volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker:/var/lib/docker:ro
            - /cgroup:/cgroup:ro
          restart: unless-stopped
          command:
            - '-housekeeping_interval=10s'
            - '-docker_only=true'
          expose:
            - 8080
          networks:
            - watch-net
          labels:
            container_group: "sudowatch"
  register: output
  tags:
    - sudowatch
    - nodeexporter
    - prometheus
    - nodeexporter-collector

# - name: Verify if the container is up
#   assert:
#     that:
#       - "prometheus.prometheus.state.running"
#   tags:
#     - prometheus

- name: Install Node exporter Collector scripts
  git:
    repo: https://github.com/prometheus-community/node-exporter-textfile-collector-scripts
    dest: /sudo/node-exporter-textfile-collector-scripts
    version: master
    update: yes
  tags:
    - sudowatch
    - nodeexporter-collector

- name: Creates a cron file for node-reboot under /etc/cron.d
  ansible.builtin.cron:
    name: node-reboot
    weekday: "*"
    minute: "0"
    hour: "*"
    user: root
    job: "/sudo/node-exporter-textfile-collector-scripts/apt.sh | sponge /var/lib/node_exporter/directory_size.prom    "
    cron_file: node-reboot
  tags:
    - sudowatch
    - nodeexporter-collector

